package cezeszamlazo;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JTextField;
import javax.swing.KeyStroke;

/**
 *
 * @author adam.papp
 */
public class CalendarDialog extends javax.swing.JDialog {

    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    
    private String[] honapok = {"január", "február", "március", "április", "május", "június", "július", "augusztus", "szeptember", "október", "november", "december"};
    private SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
    private int year, month, day;
    private JTextField field;

    /** Creates new form CalendarDialog */
    public CalendarDialog(java.awt.Frame parent, JTextField field)
    {
	super(parent, true);
	initComponents();
	
	this.field = field;
	Calendar c = Calendar.getInstance();
	if (!field.getText().isEmpty())
        {
	    String[] date = field.getText().split("-", 3);
	    this.year = Integer.parseInt(date[0]);
	    this.month = Integer.parseInt(date[1]);
	    this.day = Integer.parseInt(date[2]);
	    month--;
	    c.set(year, month, day);
	}
        else
        {
	    year = c.get(Calendar.YEAR);
	    month = c.get(Calendar.MONTH);
            month++;
	}
	szamolNaptar(c);
	
	Toolkit toolkit = Toolkit.getDefaultToolkit();
	Dimension screenSize = toolkit.getScreenSize();
	int x = (screenSize.width - getWidth()) / 2;
	int y = (screenSize.height - getHeight()) / 2;
	
	java.net.URL url = ClassLoader.getSystemResource("cezeszamlazo/resources/calendar.png");
	java.awt.Image img = toolkit.createImage(url);
	setIconImage(img);
	
	setLocation(x, y);
	
	setTitle("Naptár");
	setVisible(true);

	// Close the dialog when Esc is pressed
	String cancelName = "cancel";
	InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
	inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
	ActionMap actionMap = getRootPane().getActionMap();
	actionMap.put(cancelName, new AbstractAction() {

	    public void actionPerformed(ActionEvent e) {
		doClose(RET_CANCEL);
	    }
	});
    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
	return returnStatus;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calendarHeader = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        calendarTabla = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(cezeszamlazo.App.class).getContext().getResourceMap(CalendarDialog.class);
        calendarHeader.setFont(resourceMap.getFont("calendarHeader.font")); // NOI18N
        calendarHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        calendarHeader.setText(resourceMap.getString("calendarHeader.text")); // NOI18N
        calendarHeader.setName("calendarHeader"); // NOI18N

        jScrollPane8.setName("jScrollPane8"); // NOI18N

        calendarTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "H", "K", "Sz", "Cs", "P", "Sz", "V"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        calendarTabla.setColumnSelectionAllowed(true);
        calendarTabla.setName("calendarTabla"); // NOI18N
        calendarTabla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        calendarTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calendarTablaMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(calendarTabla);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("jPanel1.border.lineColor"))); // NOI18N
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel1MouseExited(evt);
            }
        });

        jLabel1.setIcon(resourceMap.getIcon("jLabel1.icon")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("jPanel2.border.lineColor"))); // NOI18N
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel2MouseExited(evt);
            }
        });

        jLabel2.setIcon(resourceMap.getIcon("jLabel2.icon")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(calendarHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calendarHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
	doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

private void calendarTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calendarTablaMouseClicked
	int row = calendarTabla.getSelectedRow();
	int col = calendarTabla.getSelectedColumn();
	if (row >= 0 && col >= 0 && evt.getClickCount() == 2 && evt.getButton() == MouseEvent.BUTTON1) {
	    String d = String.valueOf(calendarTabla.getValueAt(row, col));
	    try {
		Calendar c = Calendar.getInstance();
		day = Integer.parseInt(d);
		c.set(year, month, day);
		field.setText(format.format(c.getTime()));
                System.out.println("kiválasztott nap:"+format.format(c.getTime()));
		setVisible(false);
	    } catch (NumberFormatException ex) {
		System.out.println("NumberFormatException váltódott ki!");
		ex.printStackTrace();
	    }
	}
}//GEN-LAST:event_calendarTablaMouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
	month--;
	if (month < 0)
        {
	    month = 12;
	    year = year - 1;
	}
        System.out.println("month:" + month);
	Calendar c = Calendar.getInstance();
	c.set(year, month, day);
	szamolNaptar(c);
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
	month++;
	if (month > 12) {
	    month = 0;
	    year = year + 1;
	}
        System.out.println("month:" + month);
	Calendar c = Calendar.getInstance();
	c.set(year, month, day);
	szamolNaptar(c);
    }//GEN-LAST:event_jPanel2MouseClicked

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
	jPanel1.setBackground(Color.decode("#abd043"));
    }//GEN-LAST:event_jPanel1MouseEntered

    private void jPanel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseExited
	jPanel1.setBackground(Color.decode("#f0f0f0"));
    }//GEN-LAST:event_jPanel1MouseExited

    private void jPanel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseEntered
	jPanel2.setBackground(Color.decode("#abd043"));
    }//GEN-LAST:event_jPanel2MouseEntered

    private void jPanel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseExited
	jPanel2.setBackground(Color.decode("#f0f0f0"));
    }//GEN-LAST:event_jPanel2MouseExited
    
    private void doClose(int retStatus) {
	returnStatus = retStatus;
	setVisible(false);
	dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel calendarHeader;
    private javax.swing.JTable calendarTabla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane8;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;
    
    private void szamolNaptar(Calendar c) {
	calendarHeader.setText(c.get(Calendar.YEAR) + ". " + honapok[c.get(Calendar.MONTH)]);
	Calendar temp = c;
	temp.set(Calendar.DATE, 1);
	int elso = temp.get(Calendar.DAY_OF_WEEK); //azt adja vissza, hogy hanyadik nap a héten, az aktuális nap
	if (elso == 1) {
	    elso = 6;
	} else {
	    elso -= 2;
	}
	int osszes = temp.getActualMaximum(Calendar.DAY_OF_MONTH); //az adott hónap összes napját adja vissza
	for (int i = 0; i < 6; i++) {
	    for (int j = 0; j < 7; j++) {
		calendarTabla.setValueAt("", i, j);
	    }
	}
	for (int i = 1; i <= osszes; i++) {
	    int row = (i + elso - 1) / 7;
	    calendarTabla.setValueAt(i, row, (i + elso - 1) % 7);
	}
	CalendarTableRender render = new CalendarTableRender();
	for (int i = 0; i < calendarTabla.getColumnCount(); i++) {
	    calendarTabla.getColumnModel().getColumn(i).setCellRenderer(render);
	}
    }
}
