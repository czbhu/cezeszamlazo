package cezeszamlazo;

import cezeszamlazo.database.Query;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JTextField;
import javax.swing.KeyStroke;

/**
 *
 * @author adam.papp
 */
public class SzamlaKifizetesDialog extends javax.swing.JDialog {

    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    
    private String[][] szamlak;
    private String azon = "", szamlaszam = "";

    /** Creates new form SzamlaKifizetesDialog */
    public SzamlaKifizetesDialog(String szamlaszam, String azon, String osszeg) {
	initComponents();
	
	this.szamlaszam = szamlaszam;
	this.azon = azon;
	kifizetesOsszeg.setText(osszeg);
	
	kifizetesMsg.setText("A(z) " + szamlaszam + " sorszámú számla kifizetési dátuma:");
	
	init("A(z) " + szamlaszam + " kifizetése");

	// Close the dialog when Esc is pressed
	String cancelName = "cancel";
	InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
	inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
	ActionMap actionMap = getRootPane().getActionMap();
	actionMap.put(cancelName, new AbstractAction() {

	    public void actionPerformed(ActionEvent e) {
		doClose(RET_CANCEL);
	    }
	});
    }
    
    public SzamlaKifizetesDialog(String[][] szamlak) {
	initComponents();
	
	this.szamlak = szamlak;
	
	kifizetesMsg.setText("A kijelölt számlák kifizetési dátuma:");
	
	kifizetettLabel.setVisible(false);
	kifizetesOsszeg.setVisible(false);
	kifizetesPenznem.setVisible(false);
	
	init("A kijelölt számlák kifizetése");

	// Close the dialog when Esc is pressed
	String cancelName = "cancel";
	InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
	inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
	ActionMap actionMap = getRootPane().getActionMap();
	actionMap.put(cancelName, new AbstractAction() {

	    public void actionPerformed(ActionEvent e) {
		doClose(RET_CANCEL);
	    }
	});
    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
	return returnStatus;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        kifizetettLabel = new javax.swing.JLabel();
        kifizetesOsszeg = new javax.swing.JTextField();
        kifizetesPenznem = new javax.swing.JLabel();
        kifizetesMsg = new javax.swing.JLabel();
        kifizetesDatum = new javax.swing.JTextField();

        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(cezeszamlazo.App.class).getContext().getResourceMap(SzamlaKifizetesDialog.class);
        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        kifizetettLabel.setText(resourceMap.getString("kifizetettLabel.text")); // NOI18N
        kifizetettLabel.setName("kifizetettLabel"); // NOI18N

        kifizetesOsszeg.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        kifizetesOsszeg.setText(resourceMap.getString("kifizetesOsszeg.text")); // NOI18N
        kifizetesOsszeg.setName("kifizetesOsszeg"); // NOI18N
        kifizetesOsszeg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                kifizetesOsszegKeyReleased(evt);
            }
        });

        kifizetesPenznem.setText(resourceMap.getString("kifizetesPenznem.text")); // NOI18N
        kifizetesPenznem.setName("kifizetesPenznem"); // NOI18N

        kifizetesMsg.setText(resourceMap.getString("kifizetesMsg.text")); // NOI18N
        kifizetesMsg.setName("kifizetesMsg"); // NOI18N

        kifizetesDatum.setEditable(false);
        kifizetesDatum.setBackground(resourceMap.getColor("kifizetesDatum.background")); // NOI18N
        kifizetesDatum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        kifizetesDatum.setText(resourceMap.getString("kifizetesDatum.text")); // NOI18N
        kifizetesDatum.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        kifizetesDatum.setDisabledTextColor(resourceMap.getColor("kifizetesDatum.disabledTextColor")); // NOI18N
        kifizetesDatum.setEnabled(false);
        kifizetesDatum.setName("kifizetesDatum"); // NOI18N
        kifizetesDatum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kifizetesDatumMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(kifizetesMsg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kifizetesDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(kifizetettLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kifizetesOsszeg, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kifizetesPenznem)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(250, Short.MAX_VALUE)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kifizetesMsg)
                    .addComponent(kifizetesDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kifizetettLabel)
                    .addComponent(kifizetesOsszeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kifizetesPenznem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getRootPane().setDefaultButton(okButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
	if ((kifizetesOsszeg.getText().isEmpty() || kifizetesOsszeg.getText().equalsIgnoreCase("0")) && !azon.isEmpty()) {
	    HibaDialog h = new HibaDialog("Nincs összeg megadva!", "Ok", "");
	} else {
	    if (!azon.isEmpty()) {
		Object[] o = new Object[4];
		o[0] = szamlaszam;
		o[1] = kifizetesDatum.getText();
		o[2] = kifizetesOsszeg.getText();
		o[3] = azon;
		App.db.insert("INSERT INTO szamlazo_szamla_kifizetesek (szamla_sorszam, datum, osszeg, azon) "
			+ "VALUES (?, ?, ?, ?)", o, o.length);
                Query query = new Query.QueryBuilder()
                        .select("SUM(k.osszeg) - (SELECT netto + afa_ertek FROM szamlazo_szamla WHERE azon = k.azon)")
                        .from("szamlazo_szamla_kifizetesek k")
                        .where("k.azon = '" + azon + "'")
                        .build();
		Object[][] select = App.db.select(query.getQuery());
		if (Double.parseDouble(String.valueOf(select[0][0])) == 0) {
		    o[0] = "1";
		    o[1] = kifizetesDatum.getText();
		    o[2] = szamlaszam;
		    o[3] = azon;
		    App.db.insert("UPDATE szamlazo_szamla SET tipus = ?, kifizetes = ? "
			    + "WHERE szamla_sorszam = ? && azon = ?", o, o.length);
		}
	    } else {
		Object[] o = new Object[4];
		for (String[] sz : szamlak) {
		    o[0] = sz[0];
		    o[1] = kifizetesDatum.getText();
		    o[2] = sz[2];
		    o[3] = sz[1];
		    App.db.insert("INSERT INTO szamlazo_szamla_kifizetesek (szamla_sorszam, datum, osszeg, azon) "
			+ "VALUES (?, ?, ?, ?)", o, o.length);
		    o[0] = "1";
		    o[1] = kifizetesDatum.getText();
		    o[2] = sz[0];
		    o[3] = sz[1];
		    App.db.insert("UPDATE szamlazo_szamla SET tipus = ?, kifizetes = ? "
			    + "WHERE szamla_sorszam = ? && azon = ?", o, o.length);
		}
	    }
	    doClose(RET_OK);
	}
    }//GEN-LAST:event_okButtonActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
	doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
	doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void kifizetesDatumMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kifizetesDatumMouseClicked
	CalendarDialog cd = new CalendarDialog(null, kifizetesDatum);
    }//GEN-LAST:event_kifizetesDatumMouseClicked

    private void kifizetesOsszegKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kifizetesOsszegKeyReleased
	if (kifizetesPenznem.getText().equalsIgnoreCase("Ft")) {
	    csakszam(kifizetesOsszeg, 0, false);
	} else {
	    csakszam(kifizetesOsszeg, 0, true);
	}
    }//GEN-LAST:event_kifizetesOsszegKeyReleased
    
    private void doClose(int retStatus) {
	returnStatus = retStatus;
	setVisible(false);
	dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField kifizetesDatum;
    private javax.swing.JLabel kifizetesMsg;
    private javax.swing.JTextField kifizetesOsszeg;
    private javax.swing.JLabel kifizetesPenznem;
    private javax.swing.JLabel kifizetettLabel;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;
    
    private void init(String title) {
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	kifizetesDatum.setText(sdf.format(new Date()));
	
	Toolkit toolkit = Toolkit.getDefaultToolkit();
	Dimension screenSize = toolkit.getScreenSize();
	int x = (screenSize.width - getWidth()) / 2;
	int y = (screenSize.height - getHeight()) / 2;

	java.net.URL url = ClassLoader.getSystemResource("cezeszamlazo/resources/icon.png");
	java.awt.Image img = toolkit.createImage(url);
	setIconImage(img);

	setLocation(x, y);
	setTitle(title);
	
	setModal(true);
	setVisible(true);
    }
    
    private void csakszam(JTextField field, int size, boolean tizedes) {
	int caret = field.getCaretPosition();
	field.setText(csakszam(field.getText(), size, tizedes));
	try {
	    field.setCaretPosition(caret);
	} catch (Exception ex) {
	}
    }
    
    private String csakszam(String text, int size, boolean tizedes) {
	String valid = "+-0123456789";
	if (tizedes) {
	    valid += ".";
	}
	text = text.replace(",", ".");
	String result = "";
	for (int i = 0; i < text.length(); i++) {
	    if (valid.contains(text.substring(i, i + 1))) {
		result += text.substring(i, i + 1);
	    }
	}
	if (size != 0) {
	    if (result.length() > size) {
		result = result.substring(0, size);
	    }
	}
	return result;
    }
}
