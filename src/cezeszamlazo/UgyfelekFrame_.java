package cezeszamlazo;

import cezeszamlazo.ugyfel.CheckBoxRenderer;
import cezeszamlazo.database.Query;
import cezeszamlazo.ugyfel.UjUgyfelDialog;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

public class UgyfelekFrame_ extends javax.swing.JFrame {

    /**
     * Creates new form UgyfelekFrame
     */
    public UgyfelekFrame_() {
        initComponents();
        init();
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Dimension screenSize = toolkit.getScreenSize();
        int x = (screenSize.width - getWidth()) / 2;
        int y = (screenSize.height - getHeight()) / 2;

        java.net.URL url = ClassLoader.getSystemResource("cezeszamlazo/resources/ugyfelek.png");
        java.awt.Image img = toolkit.createImage(url);
        setIconImage(img);

        setLocation(x, y);
        setTitle("Ãœgyfelek");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ugyfelekPopupMenu = new javax.swing.JPopupMenu();
        megnyitasMenuItem = new javax.swing.JMenuItem();
        torolMenuItem = new javax.swing.JMenuItem();
        kereses = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ugyfelekTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        ugyfelekPopupMenu.setName("ugyfelekPopupMenu"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(cezeszamlazo.App.class).getContext().getResourceMap(UgyfelekFrame_.class);
        megnyitasMenuItem.setText(resourceMap.getString("megnyitasMenuItem.text")); // NOI18N
        megnyitasMenuItem.setName("megnyitasMenuItem"); // NOI18N
        ugyfelekPopupMenu.add(megnyitasMenuItem);

        torolMenuItem.setIcon(resourceMap.getIcon("torolMenuItem.icon")); // NOI18N
        torolMenuItem.setText(resourceMap.getString("torolMenuItem.text")); // NOI18N
        torolMenuItem.setName("torolMenuItem"); // NOI18N
        torolMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                torolMenuItemActionPerformed(evt);
            }
        });
        ugyfelekPopupMenu.add(torolMenuItem);

        setName("Form"); // NOI18N

        kereses.setFont(resourceMap.getFont("kereses.font")); // NOI18N
        kereses.setText(resourceMap.getString("kereses.text")); // NOI18N
        kereses.setName("kereses"); // NOI18N
        kereses.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keresesKeyReleased(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        ugyfelekTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "nev", "cim", "tel", "email", "penzugyes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ugyfelekTable.setName("ugyfelekTable"); // NOI18N
        ugyfelekTable.getTableHeader().setReorderingAllowed(false);
        ugyfelekTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ugyfelekTableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ugyfelekTableMouseReleased(evt);
            }
        });
        ugyfelekTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ugyfelekTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(ugyfelekTable);
        if (ugyfelekTable.getColumnModel().getColumnCount() > 0) {
            ugyfelekTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("ugyfelekTable.columnModel.title0")); // NOI18N
            ugyfelekTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("ugyfelekTable.columnModel.title1")); // NOI18N
            ugyfelekTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("ugyfelekTable.columnModel.title2")); // NOI18N
            ugyfelekTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("ugyfelekTable.columnModel.title3")); // NOI18N
            ugyfelekTable.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("ugyfelekTable.columnModel.title4")); // NOI18N
            ugyfelekTable.getColumnModel().getColumn(5).setHeaderValue(resourceMap.getString("ugyfelekTable.columnModel.title5")); // NOI18N
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("jPanel1.border.lineColor"))); // NOI18N
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel1MouseExited(evt);
            }
        });

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(resourceMap.getIcon("jLabel1.icon")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(kereses, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kereses, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void keresesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keresesKeyReleased
        frissites();
    }//GEN-LAST:event_keresesKeyReleased

    private void ugyfelekTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ugyfelekTableMouseClicked
        int row = ugyfelekTable.getSelectedRow();
        if (row >= 0 && evt.getClickCount() == 2 && evt.getButton() == MouseEvent.BUTTON1) {
            UjUgyfelDialog uud = new UjUgyfelDialog(Integer.valueOf(String.valueOf(ugyfelekTable.getValueAt(row, 0))));
            if (uud.getReturnStatus() == 1) {
                frissites();
            }
        }
    }//GEN-LAST:event_ugyfelekTableMouseClicked

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        jPanel1.setBackground(Color.decode("#ABD043"));
    }//GEN-LAST:event_jPanel1MouseEntered

    private void jPanel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseExited
        jPanel1.setBackground(Color.decode("#F0F0F0"));
    }//GEN-LAST:event_jPanel1MouseExited

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        UjUgyfelDialog u = new UjUgyfelDialog();
        if (u.getReturnStatus() == 1) {
            frissites();
        }
    }//GEN-LAST:event_jPanel1MouseClicked

    private void ugyfelekTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ugyfelekTableKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            torol();
        }
    }//GEN-LAST:event_ugyfelekTableKeyReleased

    private void ugyfelekTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ugyfelekTableMouseReleased
        if (evt.isPopupTrigger()) {
            JTable source = (JTable) evt.getSource();
            int row = source.rowAtPoint(evt.getPoint());
            int column = source.columnAtPoint(evt.getPoint());

            if (!source.isRowSelected(row)) {
                source.changeSelection(row, column, false, false);
            }

            megnyitasMenuItem.setVisible(source.getSelectedRowCount() == 1);

            ugyfelekPopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_ugyfelekTableMouseReleased

    private void torolMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_torolMenuItemActionPerformed
        torol();
    }//GEN-LAST:event_torolMenuItemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField kereses;
    private javax.swing.JMenuItem megnyitasMenuItem;
    private javax.swing.JMenuItem torolMenuItem;
    private javax.swing.JPopupMenu ugyfelekPopupMenu;
    private javax.swing.JTable ugyfelekTable;
    // End of variables declaration//GEN-END:variables

    public void frissites() {
        DefaultTableModel model = (DefaultTableModel) ugyfelekTable.getModel();
        String[] header = {"Id", "NÃ©v", "CÃ­m", "Telefon", "Email", "PÃ©nzÃ¼gyes"};
        int[] meret = {50, 170, 300, 100, 100, 100};
        String keresText = EncodeDecode.encode(kereses.getText().replace("'", "\\'"));
        String whereText = "nev LIKE '%" + keresText + "%' || irsz LIKE '%" + keresText + "%' || varos LIKE '%" + keresText + "%' || utca LIKE '%" + keresText + "%' || telefon LIKE '%" + keresText + "%' || email LIKE '%" + keresText + "%'";
        Query query = new Query.QueryBuilder()
                .select("id, "
                        + "nev, "
                        + "CONCAT(irsz, IF(irsz = '', '', ', '), varos, ' ', utca), "
                        + "telefon, "
                        + "email, "
                        + "penzugyes ")
                // + "IF(penzugyes = 1, 'true', 'false') ")
                .from("szamlazo_ugyfel")
                .where(whereText)
                .order("nev ASC")
                .build();
        Object[][] data = App.db.select(query.getQuery());
        model.setDataVector(data, header);

        TableColumn col;
        DefaultTableRender render = new DefaultTableRender();
        CheckBoxRenderer checkBoxRenderer = new CheckBoxRenderer();
        for (int i = 0; i < meret.length; i++) {
            col = ugyfelekTable.getColumnModel().getColumn(i);
            col.setPreferredWidth(meret[i]);
//            col.setCellRenderer(render);

            if (i != 5) {
                col.setCellRenderer(render);
            } else {
                col.setCellRenderer(checkBoxRenderer);
            }
        }

//        ugyfelekTable.getColumnModel().getColumn(5).setCellRenderer(checkBoxRenderer);
    }

    private void torol() {
        int[] rows = ugyfelekTable.getSelectedRows();
        if (rows.length > 0) {
            HibaDialog h = new HibaDialog(this, "Biztosan tÃ¶rlÃ¶d a kivÃ¡laszott " + (rows.length == 1 ? "sort" : "sorokat") + "?", "Igen", "Nem");
            if (h.getReturnStatus() == 1) {
                String keres = "(";
                for (int i = 0; i < rows.length; i++) {
                    keres += String.valueOf(ugyfelekTable.getValueAt(rows[i], 0)) + ", ";
                }
                keres += "0)";
                App.db.delete("DELETE FROM szamlazo_ugyfel WHERE id IN " + keres);
                frissites();
            }
        } else {
            HibaDialog h = new HibaDialog(this, "Nincs sor kivÃ¡lasztva!", "Ok", "");
        }
    }

    public void nyit() {
        frissites();
        setVisible(true);
    }

    private void init() {
        DefaultTableModel model = (DefaultTableModel) ugyfelekTable.getModel();
        String[] header = {"Id", "NÃ©v", "CÃ­m", "Telefon", "Email", "PÃ©nzÃ¼gyes"};
        int[] meret = {50, 170, 300, 100, 100, 100};
        String keresText = EncodeDecode.encode(kereses.getText().replace("'", "\\'"));
        String whereText = "nev LIKE '%" + keresText + "%' || irsz LIKE '%" + keresText + "%' || varos LIKE '%" + keresText + "%' || utca LIKE '%" + keresText + "%' || telefon LIKE '%" + keresText + "%' || email LIKE '%" + keresText + "%'";
        Query query = new Query.QueryBuilder()
                .select("id, "
                        + "nev, "
                        + "CONCAT(irsz, IF(irsz = '', '', ', '), varos, ' ', utca), "
                        + "telefon, "
                        + "email, "
                        + "penzugyes ")
                // + "IF(penzugyes = 1, 'true', 'false') ")
                .from("szamlazo_ugyfel")
                .where(whereText)
                .order("nev ASC")
                .build();
        Object[][] data = App.db.select(query.getQuery());
        model.setDataVector(data, header);

        TableColumn col;
        DefaultTableRender render = new DefaultTableRender();
        CheckBoxRenderer checkBoxRenderer = new CheckBoxRenderer();
        for (int i = 0; i < meret.length; i++) {
            col = ugyfelekTable.getColumnModel().getColumn(i);
            col.setPreferredWidth(meret[i]);
//            col.setCellRenderer(render);

            if (i != 5) {
                col.setCellRenderer(render);
            } else {
                col.setCellRenderer(checkBoxRenderer);
            }
        }

//        model.addTableModelListener(new CheckBoxModelListener(this));
//        ugyfelekTable.getColumnModel().getColumn(5).setCellRenderer(checkBoxRenderer);

    }
}
